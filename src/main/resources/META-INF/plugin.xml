<idea-plugin>
    <id>org.ballerinalang</id>
    <name>Ballerina</name>
    <version>0.8.6</version>
    <vendor email="ballerinalang@wso2.com" url="http://wso2.org">WSO2 Inc.</vendor>

    <description><![CDATA[
      <a href="http://ballerinalang.org">Ballerina</a> is a general purpose, concurrent and strongly typed programming language with both textual and graphical syntax, optimized for integration. This plugin supports development of Ballerina programs with IntelliJ IDEA.
      Please note that the graphical syntax of Ballerina is not yet supported by this plugin. For that, you can use  <a href="http://ballerinalang.org/downloads/">Ballerina Composer</a> which is available in Ballerina Tools distribution.<br>
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li>Support Ballerina v0.88 grammar.</li>
        <li>Merge two run configurations into a single configuration.</li>
        <li>Add exit points highlighting support.</li>
        <li>Add resource path query/path param highlighting support.</li>
        <li>Add package validation support.</li>
        <li>Add array.length support.</li>
        <li>Add new hidden templates.</li>
        <li>Improve code completion.</li>
        <li>Update live templates.</li>
      </ul>
      <a href="https://github.com/ballerinalang/plugin-intellij/milestone/7?closed=1">View all changes and bug fixes.</a>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="163"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <module-components>
        <component>
            <implementation-class>
                org.ballerinalang.plugins.idea.project.BallerinaModuleLibrariesInitializer
            </implementation-class>
        </component>
    </module-components>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->

        <fileTypeFactory implementation="org.ballerinalang.plugins.idea.BallerinaFileTypeFactory"/>
        <lang.parserDefinition language="Ballerina"
                               implementationClass="org.ballerinalang.plugins.idea.BallerinaParserDefinition"/>
        <lang.ast.factory language="Ballerina"
                          implementationClass="org.ballerinalang.plugins.idea.BallerinaASTFactory"/>
        <lang.commenter language="Ballerina" implementationClass="org.ballerinalang.plugins.idea.BallerinaCommenter"/>

        <!-- syntax highlighting -->
        <lang.syntaxHighlighterFactory language="Ballerina"
                                       implementationClass="org.ballerinalang.plugins.idea.highlighter.BallerinaSyntaxHighlighterFactory"/>
        <colorSettingsPage implementation="org.ballerinalang.plugins.idea.highlighter.BallerinaColorSettingsPage"/>
        <annotator language="Ballerina"
                   implementationClass="org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator"/>

        <!--exit points highlighting-->
        <highlightUsagesHandlerFactory
                implementation="org.ballerinalang.plugins.idea.codeinsight.highlighting.HighlightExitPointsHandlerFactory"/>

        <!--formatter-->
        <lang.formatter language="Ballerina"
                        implementationClass="org.ballerinalang.plugins.idea.formatter.BallerinaFormattingModelBuilder"/>
        <codeStyleSettingsProvider
                implementation="org.ballerinalang.plugins.idea.formatter.settings.BallerinaCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider
                implementation="org.ballerinalang.plugins.idea.formatter.settings.BallerinaLanguageCodeStyleSettingsProvider"/>
        <quoteHandler fileType="Ballerina file"
                      className="org.ballerinalang.plugins.idea.codeinsight.editoractions.BallerinaQuoteHandler"/>
        <enterHandlerDelegate
                implementation="org.ballerinalang.plugins.idea.formatter.BallerinaEnterBetweenBracesHandler"/>

        <!--structure view-->
        <lang.psiStructureViewFactory language="Ballerina"
                                      implementationClass="org.ballerinalang.plugins.idea.structureview.BallerinaStructureViewFactory"/>

        <!--completion-->
        <completion.contributor language="Ballerina"
                                implementationClass="org.ballerinalang.plugins.idea.completion.BallerinaCompletionContributor"/>
        <lang.braceMatcher language="Ballerina"
                           implementationClass="org.ballerinalang.plugins.idea.codeinsight.highlighting.BallerinaPairedBraceMatcher"/>

        <!--parameter-->
        <codeInsight.parameterInfo language="Ballerina"
                                   implementationClass="org.ballerinalang.plugins.idea.editor.BallerinaParameterInfoHandler"/>
        <codeInsight.parameterNameHints language="Ballerina"
                                        implementationClass="org.ballerinalang.plugins.idea.codeinsight.hints.BallerinaParameterHintsProvider"/>

        <!--line marker-->
        <codeInsight.lineMarkerProvider language="Ballerina"
                                        implementationClass="org.ballerinalang.plugins.idea.marker.BallerinaRecursiveCallMarkerProvider"/>

        <!--spell checking-->
        <spellchecker.support language="Ballerina"
                              implementationClass="org.ballerinalang.plugins.idea.spellchecker.BallerinaSpellcheckingStrategy"/>

        <!--find usage-->
        <lang.findUsagesProvider language="Ballerina"
                                 implementationClass="org.ballerinalang.plugins.idea.usage.BallerinaFindUsageProvider"/>

        <!-- templates -->
        <internalFileTemplate name="Ballerina File"/>
        <internalFileTemplate name="Ballerina Main"/>
        <internalFileTemplate name="Ballerina Service"/>
        <defaultTemplatePropertiesProvider
                implementation="org.ballerinalang.plugins.idea.actions.BallerinaTemplatePropertiesProvider"/>

        <!--live templates-->
        <defaultLiveTemplatesProvider
                implementation="org.ballerinalang.plugins.idea.template.BallerinaLiveTemplateProvider"/>
        <liveTemplateContext implementation="org.ballerinalang.plugins.idea.template.BallerinaEverywhereContextType"/>
        <liveTemplateContext implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$File"/>
        <liveTemplateContext implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Service"/>
        <liveTemplateContext
                implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Resource"/>
        <liveTemplateContext
                implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Connector"/>
        <liveTemplateContext
                implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Action"/>
        <liveTemplateContext
                implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$Function"/>
        <liveTemplateContext
                implementation="org.ballerinalang.plugins.idea.template.BallerinaCodeContextType$ForkJoin"/>

        <!-- sdk -->
        <sdkType implementation="org.ballerinalang.plugins.idea.sdk.BallerinaSdkType"/>
        <projectSdkSetupValidator id="BallerinaSdk"
                                  implementation="org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaProjectSdkSetupValidator"/>
        <library.presentationProvider
                implementation="org.ballerinalang.plugins.idea.sdk.BallerinaSdkLibraryPresentationProvider"/>
        <applicationService
                serviceImplementation="org.ballerinalang.plugins.idea.sdk.BallerinaPathModificationTracker"/>
        <projectService serviceInterface="org.ballerinalang.plugins.idea.sdk.BallerinaSdkService"
                        serviceImplementation="org.ballerinalang.plugins.idea.sdk.BallerinaSdkService"
                        overrides="false"/>

        <!-- module -->
        <moduleType id="BALLERINA_MODULE" implementationClass="org.ballerinalang.plugins.idea.BallerinaModuleType"/>
        <moduleConfigurationEditorProvider
                implementation="org.ballerinalang.plugins.idea.configuration.BallerinaModuleEditorsProvider"
                order="first"/>

        <!--project-->
        <applicationService
                serviceImplementation="org.ballerinalang.plugins.idea.project.BallerinaApplicationLibrariesService"/>
        <projectService
                serviceImplementation="org.ballerinalang.plugins.idea.project.BallerinaProjectLibrariesService"/>
        <projectConfigurable id="Ballerina" groupId="language"
                             provider="org.ballerinalang.plugins.idea.configuration.BallerinaConfigurableProvider"
                             dynamic="true"/>
        <projectExtension implementation="org.ballerinalang.plugins.idea.project.BallerinaProjectExtension"/>

        <!-- run application -->
        <programRunner id="ballerinaRunner"
                       implementation="org.ballerinalang.plugins.idea.run.configuration.BallerinaRunner"/>
        <configurationType
                implementation="org.ballerinalang.plugins.idea.run.configuration.application.BallerinaApplicationRunConfigurationType"/>
        <runConfigurationProducer
                implementation="org.ballerinalang.plugins.idea.run.configuration.application.BallerinaApplicationRunConfigurationProducer"/>
        <runLineMarkerContributor language="Ballerina"
                                  implementationClass="org.ballerinalang.plugins.idea.run.configuration.BallerinaRunLineMarkerProvider"/>
        <console.folding implementation="org.ballerinalang.plugins.idea.run.configuration.BallerinaConsoleFolding"/>

        <!--folding builder-->
        <lang.foldingBuilder language="Ballerina"
                             implementationClass="org.ballerinalang.plugins.idea.editor.BallerinaFoldingBuilder"/>

        <!--documentation-->
        <lang.documentationProvider language="Ballerina"
                                    implementationClass="org.ballerinalang.plugins.idea.documentation.BallerinaDocumentationProvider"/>

        <!--inspections-->
        <localInspection groupPath="Ballerina" language="Ballerina" shortName="WrongPackageStatement"
                         bundle="messages.InspectionsBundle" key="wrong.package.statement"
                         groupKey="group.names.probable.bugs"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.ballerinalang.plugins.idea.codeInspection.WrongPackageStatementInspection"/>

    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="Ballerina.NewBallerinaFile" class="org.ballerinalang.plugins.idea.actions.BallerinaCreateFileAction"
                text="Ballerina File" description="Create new Ballerina file">
            <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
        </action>
    </actions>

    <application-components>
        <component>
            <implementation-class>org.ballerinalang.plugins.idea.ui.BallerinaNotification</implementation-class>
        </component>
    </application-components>

</idea-plugin>
